#include <iostream>
using namespace std;

// Recursive function for binary search
int recursiveBinarySearch(int arr[], int left, int right, int target) {
    if (left > right)
        return -1; // Base case: element not found

    int mid = left + (right - left) / 2; // Calculate mid index

    if (arr[mid] == target)
        return mid; // Element found

    // If target is smaller, search in the left half
    if (arr[mid] > target)
        return recursiveBinarySearch(arr, left, mid - 1, target);

    // If target is larger, search in the right half
    return recursiveBinarySearch(arr, mid + 1, right, target);
}

int main() {
    int arr[] = {10, 20, 30, 40, 50, 60, 70}; // Sorted array
    int size = sizeof(arr) / sizeof(arr[0]);
    int target;

    cout << "Enter the element to search: ";
    cin >> target;

    int result = recursiveBinarySearch(arr, 0, size - 1, target);

    if (result != -1)
        cout << "Element found at index: " << result << endl;
    else
        cout << "Element not found in the array." << endl;

    return 0;
}
